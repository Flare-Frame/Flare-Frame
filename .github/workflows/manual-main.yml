name: Build & Upload Release + Debug APK/AAB

# 📦 Trigger:
#   • When a pull request is MERGED into main
#   • Or manually via the “Run workflow” button in GitHub Actions
on:
  pull_request:
    types: [closed]       # Only fire when PR is closed…
    branches: [main]      # …against main
  workflow_dispatch:      # Allow manual triggering anytime

jobs:
  release-build:
    name: Build Release + Debug Artifacts
    runs-on: ubuntu-latest

    # ✅ Ensure the PR was actually merged, not just closed
    if: github.event.pull_request.merged == true

    steps:
      # 🔽 Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # ☕ Step 2: Set up Java Development Kit (JDK) for Gradle
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'     # Use the official OpenJDK distribution
          java-version: '17'          # Match your app's Java version

      # ⚙️ Step 3: Ensure the Gradle wrapper has execute permissions
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      # 🛠️ Step 4: Build release and debug variants — no tests here
      - name: Assemble Release, Debug APKs and AAB
        run: |
          ./gradlew assembleRelease bundleRelease assembleDebug

      # 📤 Step 5: Upload the Release APK
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-app.apk
          path: app/build/outputs/apk/release/app-release.apk

      # 📤 Step 6: Upload the Release AAB
      - name: Upload Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: release-app.aab
          path: app/build/outputs/bundle/release/app-release.aab

      # 📤 Step 7: Upload the Debug APK
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-app.apk
          path: app/build/outputs/apk/debug/app-debug.apk
